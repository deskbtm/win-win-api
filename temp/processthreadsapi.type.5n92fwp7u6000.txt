export interface WinUserFns extends TsWin32FnsBasic {
CreateProcessA:(lpApplicationName:LPCSTR,lpCommandLine:LPSTR,lpProcessAttributes:LPSECURITY_ATTRIBUTES,lpThreadAttributes:LPSECURITY_ATTRIBUTES,bInheritHandles:BOOL,dwCreationFlags:DWORD,lpEnvironment:LPVOID,lpCurrentDirectory:LPCSTR,lpStartupInfo:LPSTARTUPINFOA,lpProcessInformation:LPPROCESS_INFORMATION)=> BOOL;
CreateProcessAsUserA:(hToken:HANDLE,lpApplicationName:LPCSTR,lpCommandLine:LPSTR,lpProcessAttributes:LPSECURITY_ATTRIBUTES,lpThreadAttributes:LPSECURITY_ATTRIBUTES,bInheritHandles:BOOL,dwCreationFlags:DWORD,lpEnvironment:LPVOID,lpCurrentDirectory:LPCSTR,lpStartupInfo:LPSTARTUPINFOA,lpProcessInformation:LPPROCESS_INFORMATION)=> BOOL;
CreateProcessAsUserW:(hToken:HANDLE,lpApplicationName:LPCWSTR,lpCommandLine:LPWSTR,lpProcessAttributes:LPSECURITY_ATTRIBUTES,lpThreadAttributes:LPSECURITY_ATTRIBUTES,bInheritHandles:BOOL,dwCreationFlags:DWORD,lpEnvironment:LPVOID,lpCurrentDirectory:LPCWSTR,lpStartupInfo:LPSTARTUPINFOW,lpProcessInformation:LPPROCESS_INFORMATION)=> BOOL;
CreateProcessW:(lpApplicationName:LPCWSTR,lpCommandLine:LPWSTR,lpProcessAttributes:LPSECURITY_ATTRIBUTES,lpThreadAttributes:LPSECURITY_ATTRIBUTES,bInheritHandles:BOOL,dwCreationFlags:DWORD,lpEnvironment:LPVOID,lpCurrentDirectory:LPCWSTR,lpStartupInfo:LPSTARTUPINFOW,lpProcessInformation:LPPROCESS_INFORMATION)=> BOOL;
CreateRemoteThread:(hProcess:HANDLE,lpThreadAttributes:LPSECURITY_ATTRIBUTES,dwStackSize:SIZE_T,lpStartAddress:LPTHREAD_START_ROUTINE,lpParameter:LPVOID,dwCreationFlags:DWORD,lpThreadId:LPDWORD)=> HANDLE;
CreateRemoteThreadEx:(hProcess:HANDLE,lpThreadAttributes:LPSECURITY_ATTRIBUTES,dwStackSize:SIZE_T,lpStartAddress:LPTHREAD_START_ROUTINE,lpParameter:LPVOID,dwCreationFlags:DWORD,lpAttributeList:LPPROC_THREAD_ATTRIBUTE_LIST,lpThreadId:LPDWORD)=> HANDLE;
CreateThread:(lpThreadAttributes:LPSECURITY_ATTRIBUTES,dwStackSize:SIZE_T,lpStartAddress:LPTHREAD_START_ROUTINE,lpParameter:__DRV_ALIASESMEM|LPVOID,dwCreationFlags:DWORD,lpThreadId:LPDWORD)=> HANDLE;
DeleteProcThreadAttributeList:(lpAttributeList:LPPROC_THREAD_ATTRIBUTE_LIST)=> VOID;
ExitProcess:(uExitCode:UINT)=> VOID;
ExitThread:(dwExitCode:DWORD)=> VOID;
FlushInstructionCache:(hProcess:HANDLE,lpBaseAddress:LPCVOID,dwSize:SIZE_T)=> BOOL;
FlushProcessWriteBuffers:()=> VOID;
GetCurrentProcess:()=> HANDLE;
GetCurrentProcessId:()=> DWORD;
GetCurrentProcessorNumber:()=> DWORD;
GetCurrentProcessorNumberEx:(ProcNumber:PPROCESSOR_NUMBER)=> VOID;
GetCurrentProcessToken:()=> HANDLE;
GetCurrentThread:()=> HANDLE;
GetCurrentThreadEffectiveToken:()=> HANDLE;
GetCurrentThreadId:()=> DWORD;
GetCurrentThreadStackLimits:(LowLimit:PULONG_PTR,HighLimit:PULONG_PTR)=> VOID;
GetCurrentThreadToken:()=> HANDLE;
GetExitCodeProcess:(hProcess:HANDLE,lpExitCode:LPDWORD)=> BOOL;
GetExitCodeThread:(hThread:HANDLE,lpExitCode:LPDWORD)=> BOOL;
GetPriorityClass:(hProcess:HANDLE)=> DWORD;
GetProcessHandleCount:(hProcess:HANDLE,pdwHandleCount:PDWORD)=> BOOL;
GetProcessId:(Process:HANDLE)=> DWORD;
GetProcessIdOfThread:(Thread:HANDLE)=> DWORD;
GetProcessInformation:(hProcess:HANDLE,ProcessInformationClass:PROCESS_INFORMATION_CLASS,ProcessInformation:LPVOID,ProcessInformationSize:DWORD)=> BOOL;
GetProcessMitigationPolicy:(hProcess:HANDLE,MitigationPolicy:PROCESS_MITIGATION_POLICY,lpBuffer:PVOID,dwLength:SIZE_T)=> BOOL;
GetProcessPriorityBoost:(hProcess:HANDLE,pDisablePriorityBoost:PBOOL)=> BOOL;
GetProcessShutdownParameters:(lpdwLevel:LPDWORD,lpdwFlags:LPDWORD)=> BOOL;
GetProcessTimes:(hProcess:HANDLE,lpCreationTime:LPFILETIME,lpExitTime:LPFILETIME,lpKernelTime:LPFILETIME,lpUserTime:LPFILETIME)=> BOOL;
GetProcessVersion:(ProcessId:DWORD)=> DWORD;
GetStartupInfoW:(lpStartupInfo:LPSTARTUPINFOW)=> VOID;
GetSystemTimes:(lpIdleTime:PFILETIME,lpKernelTime:PFILETIME,lpUserTime:PFILETIME)=> BOOL;
GetThreadContext:(hThread:HANDLE,lpContext:LPCONTEXT)=> BOOL;
GetThreadDescription:(hThread:HANDLE,*ppszThreadDescription:PWSTR)=> HRESULT;
GetThreadId:(Thread:HANDLE)=> DWORD;
GetThreadIdealProcessorEx:(hThread:HANDLE,lpIdealProcessor:PPROCESSOR_NUMBER)=> BOOL;
GetThreadInformation:(hThread:HANDLE,ThreadInformationClass:THREAD_INFORMATION_CLASS,ThreadInformation:LPVOID,ThreadInformationSize:DWORD)=> BOOL;
GetThreadIOPendingFlag:(hThread:HANDLE,lpIOIsPending:PBOOL)=> BOOL;
GetThreadPriority:(hThread:HANDLE)=> INT;
GetThreadPriorityBoost:(hThread:HANDLE,pDisablePriorityBoost:PBOOL)=> BOOL;
GetThreadTimes:(hThread:HANDLE,lpCreationTime:LPFILETIME,lpExitTime:LPFILETIME,lpKernelTime:LPFILETIME,lpUserTime:LPFILETIME)=> BOOL;
InitializeProcThreadAttributeList:(lpAttributeList:LPPROC_THREAD_ATTRIBUTE_LIST,dwAttributeCount:DWORD,dwFlags:DWORD,lpSize:PSIZE_T)=> BOOL;
IsProcessCritical:(hProcess:HANDLE,Critical:PBOOL)=> BOOL;
IsProcessorFeaturePresent:(ProcessorFeature:DWORD)=> BOOL;
OpenProcess:(dwDesiredAccess:DWORD,bInheritHandle:BOOL,dwProcessId:DWORD)=> HANDLE;
OpenProcessToken:(ProcessHandle:HANDLE,DesiredAccess:DWORD,TokenHandle:PHANDLE)=> BOOL;
OpenThread:(dwDesiredAccess:DWORD,bInheritHandle:BOOL,dwThreadId:DWORD)=> HANDLE;
OpenThreadToken:(ThreadHandle:HANDLE,DesiredAccess:DWORD,OpenAsSelf:BOOL,TokenHandle:PHANDLE)=> BOOL;
ProcessIdToSessionId:(dwProcessId:DWORD,*pSessionId:DWORD)=> BOOL;
QueryProcessAffinityUpdateMode:(hProcess:HANDLE,lpdwFlags:LPDWORD)=> BOOL;
QueryProtectedPolicy:(PolicyGuid:LPCGUID,PolicyValue:PULONG_PTR)=> BOOL;
QueueUserAPC:(pfnAPC:PAPCFUNC,hThread:HANDLE,dwData:ULONG_PTR)=> DWORD;
ResumeThread:(hThread:HANDLE)=> DWORD;
SetPriorityClass:(hProcess:HANDLE,dwPriorityClass:DWORD)=> BOOL;
SetProcessAffinityUpdateMode:(hProcess:HANDLE,dwFlags:DWORD)=> BOOL;
SetProcessDynamicEHContinuationTargets:(Process:HANDLE,NumberOfTargets:USHORT,Targets:PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET)=> BOOL;
SetProcessInformation:(hProcess:HANDLE,ProcessInformationClass:PROCESS_INFORMATION_CLASS,ProcessInformation:LPVOID,ProcessInformationSize:DWORD)=> BOOL;
SetProcessMitigationPolicy:(MitigationPolicy:PROCESS_MITIGATION_POLICY,lpBuffer:PVOID,dwLength:SIZE_T)=> BOOL;
SetProcessPriorityBoost:(hProcess:HANDLE,bDisablePriorityBoost:BOOL)=> BOOL;
SetProcessShutdownParameters:(dwLevel:DWORD,dwFlags:DWORD)=> BOOL;
SetProtectedPolicy:(PolicyGuid:LPCGUID,PolicyValue:ULONG_PTR,OldPolicyValue:PULONG_PTR)=> BOOL;
SetThreadContext:(hThread:HANDLE,*lpContext:CONST|CONTEXT)=> BOOL;
SetThreadDescription:(hThread:HANDLE,lpThreadDescription:PCWSTR)=> HRESULT;
SetThreadIdealProcessor:(hThread:HANDLE,dwIdealProcessor:DWORD)=> DWORD;
SetThreadIdealProcessorEx:(hThread:HANDLE,lpIdealProcessor:PPROCESSOR_NUMBER,lpPreviousIdealProcessor:PPROCESSOR_NUMBER)=> BOOL;
SetThreadInformation:(hThread:HANDLE,ThreadInformationClass:THREAD_INFORMATION_CLASS,ThreadInformation:LPVOID,ThreadInformationSize:DWORD)=> BOOL;
SetThreadPriority:(hThread:HANDLE,nPriority:INT)=> BOOL;
SetThreadPriorityBoost:(hThread:HANDLE,bDisablePriorityBoost:BOOL)=> BOOL;
SetThreadStackGuarantee:(StackSizeInBytes:PULONG)=> BOOL;
SetThreadToken:(Thread:PHANDLE,Token:HANDLE)=> BOOL;
SuspendThread:(hThread:HANDLE)=> DWORD;
SwitchToThread:()=> BOOL;
TerminateProcess:(hProcess:HANDLE,uExitCode:UINT)=> BOOL;
TerminateThread:(hThread:HANDLE,dwExitCode:DWORD)=> BOOL;
TlsAlloc:()=> DWORD;
TlsFree:(dwTlsIndex:DWORD)=> BOOL;
TlsGetValue:(dwTlsIndex:DWORD)=> LPVOID;
TlsSetValue:(dwTlsIndex:DWORD,lpTlsValue:LPVOID)=> BOOL;
UpdateProcThreadAttribute:(lpAttributeList:LPPROC_THREAD_ATTRIBUTE_LIST,dwFlags:DWORD,Attribute:DWORD_PTR,lpValue:PVOID,cbSize:SIZE_T,lpPreviousValue:PVOID,lpReturnSize:PSIZE_T)=> BOOL;
}